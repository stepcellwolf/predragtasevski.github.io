<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Predrag TASEVSKI - Pece - design</title><link href="https://predragtasevski.com/" rel="alternate"></link><link href="https://predragtasevski.com/feeds/tag/design.atom.xml" rel="self"></link><id>https://predragtasevski.com/</id><updated>2021-07-09T00:00:00+02:00</updated><entry><title>Vision of security in Canonical products</title><link href="https://predragtasevski.com/posts/2021/07/canonical-security-vision/" rel="alternate"></link><published>2021-07-09T00:00:00+02:00</published><updated>2021-07-09T00:00:00+02:00</updated><author><name>Predrag TASEVSKI - Pece</name></author><id>tag:predragtasevski.com,2021-07-09:/posts/2021/07/canonical-security-vision/</id><summary type="html">&lt;p&gt;Being online affects a new way of living where we are non-stop connected and share our data. After all, the devices and the Internet that we connect to are not designed to be secure and to be privacy driven by default. That said, the end user is not aware, concerned …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Being online affects a new way of living where we are non-stop connected and share our data. After all, the devices and the Internet that we connect to are not designed to be secure and to be privacy driven by default. That said, the end user is not aware, concerned and not knowledgeable about how to secure their digital environment. Therefore, with this product leadership role I would like to engage with technical, community and commercial audiences to find out what could be a turnkey solution for the end users.&lt;/p&gt;
&lt;p&gt;Open source is playing an important role in privacy and security. But open source is not the only element to take into consideration to facilitate contribution of the community. Contribution to the community is based on transparency. In my previous working experience when I was working for an open source company gave me insides how the open source community works. However in a meantime it demonstrated to me how privacy and security topics were left out due to meeting product milestones, and making the product out on market as soon as possible. In my opinion the biggest challenge is balancing transparency, security and privacy. In the early stage of product design and development we should involve a subject-matter expert (SME) and collaborate with the community to create a bridge between security and privacy.&lt;/p&gt;
&lt;p&gt;Customers and clients are relying on vendor risk management assessment by evaluating third-party cybersecurity posture. The assessment is aiming to ensure security across an organization's IT ecosystem. However, the multiplicity of tools generates struggles when it comes to implement and maintain security technical and organisational measures. Simplicity and transparency are great future investments to consolidate tools, fulfill and demonstrate compliance requirements. &lt;/p&gt;
&lt;p&gt;Furthermore digital transformation is underway finding itself accelerated. Enterprises are increasingly moving toward a hybrid cloud infrastructure. Because it is providing a seamless integration management with cloud datacenters, applications and workloads. Even with these improvements, challenges due to aggressive data growth remains. Following the same trend the application security has matured, together with DevSecOps. Nevertheless there is no single testing technique or an orchestration that has helped development, operation and security teams to mitigate all security risk. It requires teams to employ multiple tools and robust orchestration solutions from multiple vendors to secure simultaneously the SDLC and the infrastructure.&lt;/p&gt;
&lt;p&gt;Canonical is well positioned to succeed in solving the above issue with sandboxing and ensuring isolated data with the use of snaps. Another Livepatch Service is fixing and applying critical kernel patches automatically without restarting the system, and in the IoT devices Ubuntu Core provides a compliment setting.&lt;/p&gt;
&lt;p&gt;Data has three states: in transit, at rest and in use. In the current state of art data is often encrypted “at rest” in storage and “in transit” across the network thanks to cloud computing, but not while “in use” in memory. In this regard the ability to protect data and code application while it is in use in conventional computing infrastructure is even more important.The three states principle allows a robust and sustainable ecosystem for IoT, robotics, automotive and health industries, and etc.&lt;/p&gt;
&lt;p&gt;Notwithstanding the exponential growth of digital transformation, organizations underestimate their needs in security, resilience and agility. To secure and harden an organization, you have to take into account several factors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;security and privacy by design,&lt;/li&gt;
&lt;li&gt;security and privacy by default,&lt;/li&gt;
&lt;li&gt;orchestration of controls,&lt;/li&gt;
&lt;li&gt;encrypting data in use.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Having this in mind the organizations will have a better way of managing the weakest link in technology, that is the human. Each organisation usually has enforced awareness training, phishing simulations, IT security guidance, process and practice - but is this enough? There will never be such a thing as perfect security, but rather it requires a data-driven and content-centric approach to understand the root cause and to develop the products security and privacy by design and by default. Last but not least, it is important to build a stable governance bridge between the consumer and the engineers to understand, and discuss what can be done to guarantee a secure, resilient product. Hence, the critical level of security issues that routinely plague IT today ought not be as big as they are today.&lt;/p&gt;</content><category term="pages"></category><category term="security"></category><category term="privacy"></category><category term="canonical"></category><category term="ubuntu"></category><category term="default"></category><category term="design"></category><category term="vision"></category></entry><entry><title>New blog and why pelican?</title><link href="https://predragtasevski.com/posts/2014/11/new-blog-and-why-pelican/" rel="alternate"></link><published>2014-11-11T00:00:00+01:00</published><updated>2014-11-11T00:00:00+01:00</updated><author><name>Predrag TASEVSKI - Pece</name></author><id>tag:predragtasevski.com,2014-11-11:/posts/2014/11/new-blog-and-why-pelican/</id><summary type="html">&lt;p&gt;It has been a long time since I have written a blog post. This is due to an idiotic incident or I might say stupidity approach of someone, who decided to exploit the vulnerability of wordpress sites on the server where my blog was hosted. Yet, this incident occurred in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It has been a long time since I have written a blog post. This is due to an idiotic incident or I might say stupidity approach of someone, who decided to exploit the vulnerability of wordpress sites on the server where my blog was hosted. Yet, this incident occurred in the middle of this year, and it indeed took me a while to tackle and handle the new blog. Speaking of which the incident, it was perfect timing where I was just thinking of changing and researching which is the most suitable solution to switch from dynamic CMS (Custom Management System) to static one. Why I switched from dynamic to static, I might guess that almost everyone knows the reasons. But let me highlight the most important ones. For instance, static web sites are resistant to the attacks when the intruder requests more then one queries, there is no database in the back-end or on the server needed as requirements, the content of the posts and pages are written in pure markdown or some other plain text format, it is fun - particularly when you need to learn new language or totally new different approach, especially when you could hosted in free, community publicly available services, such as &lt;a href="https://pages.github.com/" target="_blank"&gt;GitHub&lt;/a&gt; and many more. Those are just few reasons why I have decided to use and to switch my blog - homepage from dynamic web content management system to static one.&lt;/p&gt;
&lt;p&gt;Moreover, to switch from dynamic to static, I kind of dig deep into the several static web solutions. However, before I choose the right one, and before checking one by one, I had a requirements list which aims and guide me in selecting and shortening my list. Without any further a do, here are the requirements:
- Static web solution.
- Python language, because I'm more familiar rather then Ruby, Perl, etc.
- Being able and easy to be deployed into GitHub Pages, particularly is because I want it to switch from payed host to a community based one. And most of the &lt;em&gt;nerds&lt;/em&gt; and &lt;em&gt;geeks&lt;/em&gt; nowadays are hosting there sites and blogs at GitHub Pages.
- Be able to write the content with Markdown format, and import and export them from Org-mode format. Because this is the format that I usually use everyday.
- Good documentation and to be able to import the content from WordPress to the required format.
- Easy to be integrated with bootstrap3 and to be responsive, without any further tackling or need to create theme from stretch.
- To be continuously maintained. 
- Any indeed many others, which I could not recall them at the moment, but anyway feel free to add additional requirements.&lt;/p&gt;
&lt;p&gt;Worth withstanding, to mention one site which helped and provide me a perfect list of all freely-publicly available static web site generator  solutions, &lt;a href="https://www.staticgen.com/" target="_blank"&gt;StaticGen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The competition taking in mind the above requirements was between &lt;a href="http://blog.getpelican.com/" target="_blank"&gt;Pelican&lt;/a&gt; and &lt;a href="http://www.getnikola.com/" target="_blank"&gt;Nikola&lt;/a&gt;. And to be frank with you, I like the Nikola name, mostly because it is Slavic name, however after couple of hours researching I have decided to give it a try to Pelican. Therefore, my first impression of it was that indeed I fell in love with it. Not because it is developed with Python, but also because of the simplicity and the structure of the content using tree approach. Additionally the &lt;a href="http://docs.getpelican.com/en/3.5.0/index.html" target="_blank"&gt;documentation&lt;/a&gt; it-self it is quite good, I say quite because it could be better, but anyway it is well structured. It does provide step-wised methods of how to deploy your blog - pages into several different most popular cloud solutions, and so on. However, in the end for advance futures and advanced theme-ing and so on, you might find it a bit fragile and not enough to prepare you for next steps. Nonetheless, I do not want to give a wrong expression, it is quite well documented and it will provide you nice &lt;a href="http://docs.getpelican.com/en/3.5.0/tips.html" target="_blank"&gt;tips&lt;/a&gt; - before you upload your first gh-pages in Github make sure to check the Tips section.&lt;/p&gt;
&lt;p&gt;At the beginning importing content from the previous system was quite nice done, and it provides you different solutions, such as plugins to import from well known CMS, or you can just import the RSS feeds, which in the end I did it. Anyhow, then you need to choose between tags and slugs what will be the difference and so on. Meantime, you also need to decide which &lt;a href="http://docs.getpelican.com/en/3.5.0/plugins.html" target="_blank"&gt;plugins&lt;/a&gt; and &lt;a href="http://docs.getpelican.com/en/3.5.0/pelican-themes.html" target="_blank"&gt;themes&lt;/a&gt; your are going to use. After you configure your &lt;code&gt;pelicanconf.py&lt;/code&gt;, don't forget to update the IDs for google analytics and the comments system. In the end, before you upload the content to the github pages make sure you understand or you know GitHub commands, otherwise you will be lost like me first hours. But finally I understood that if I would like to use GitHub for future work, most probably I will need to learn and know my way to deal with it. If you do not know, then you will end-up like me deleting the content, then screwing the GitHub repositories and so on.&lt;/p&gt;
&lt;p&gt;Anyway, hope that this will help you to decide if you have any doubts of which static web solution you should use, and how to deploy it and indeed, where as well. Hope you enjoy it and I will try my best to keep this blog up-to date and also share much more with you in near future.&lt;/p&gt;
&lt;p&gt;Salute...&lt;/p&gt;</content><category term="pages"></category><category term="pelican"></category><category term="blog"></category><category term="design"></category></entry></feed>